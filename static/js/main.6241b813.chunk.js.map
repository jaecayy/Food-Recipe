{"version":3,"sources":["components/Header.js","components/RecipeItem.js","components/Recipe.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","search","onInputChange","onSearchClick","className","class","type","placeholder","value","onChange","onClick","RecipeItem","name","image","ingredientLines","src","map","ingredient","Recipe","recipes","recipe","label","Math","random","App","useState","setSerach","setRecipes","useEffect","getRecipes","a","Axios","get","res","data","hits","e","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PA8BeA,EA5BA,SAAAC,GACb,IAAQC,EAAyCD,EAAzCC,OAAQC,EAAiCF,EAAjCE,cAAeC,EAAkBH,EAAlBG,cAC/B,OACE,sBAAKC,UAAU,YAAf,UACE,qBAAIA,UAAU,YAAd,UACE,mBAAGC,MAAM,4BAAT,sBADF,kBAGA,sBAAKA,MAAM,2BAAX,UACE,uBACEC,KAAK,OACLD,MAAM,eACNE,YAAY,wBACZC,MAAOP,EACPQ,SAAUP,IAEZ,qBAAKG,MAAM,qBAAX,SACE,wBAAQD,UAAU,eAAeM,QAASP,EAA1C,gCAKJ,qBAAKC,UAAU,QAAf,SACE,2CAAa,mBAAGA,UAAU,uBAAb,+BCLNO,EAjBI,SAAAX,GACjB,IAAQY,EAAiCZ,EAAjCY,KAAMC,EAA2Bb,EAA3Ba,MAAOC,EAAoBd,EAApBc,gBACrB,OACI,sBAAKT,MAAM,wBAAX,UACE,qBAAKU,IAAKF,EAAOT,UAAU,0CAC3B,qBAAKC,MAAM,YAAX,SACE,6BAAKO,MAEP,oBAAIP,MAAM,8BAAV,SACGS,EAAgBE,KAAI,SAAAC,GAAU,OAC7B,oBAAIb,UAAU,kBAAd,SAAiCa,aCO9BC,EAhBA,SAAAlB,GACb,IAAQmB,EAAYnB,EAAZmB,QACR,OACE,qBAAKd,MAAM,eAAX,SACGc,EAAQH,KAAI,SAAAI,GAAM,OACjB,cAAC,EAAD,CAEER,KAAMQ,EAAOA,OAAOC,MACpBR,MAAOO,EAAOA,OAAOP,MACrBC,gBAAiBM,EAAOA,OAAON,iBAHV,IAAhBQ,KAAKC,gB,iBCoCLC,MAvCf,WACE,MAA4BC,mBAAS,SAArC,mBAAOxB,EAAP,KAAeyB,EAAf,KACA,EAA8BD,mBAAS,IAAvC,mBAAON,EAAP,KAAgBQ,EAAhB,KAKAC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAU,uCAAG,4BAAAC,EAAA,sEACCC,IAAMC,IAAN,0CACmB/B,EADnB,mBARL,WAQK,oBAPJ,uCAMG,OACXgC,EADW,OAIjBN,EAAWM,EAAIC,KAAKC,MAJH,2CAAH,qDAchB,OACE,sBAAK/B,UAAU,MAAf,UACE,cAAC,EAAD,CACEH,OAAQA,EACRC,cAXgB,SAAAkC,GACpBV,EAAUU,EAAEC,OAAO7B,QAWfL,cARgB,WACpB0B,OASE,qBAAKzB,UAAU,YAAf,SACE,cAAC,EAAD,CAAQe,QAASA,UC3BVmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6241b813.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = props => {\n  const { search, onInputChange, onSearchClick } = props;\n  return (\n    <div className=\"jumbotron\">\n      <h1 className=\"display-1\">\n        <i class=\"material-icons brand-icon\">fastfood</i> Food Recipe\n      </h1>\n      <div class=\"input-group w-50 mx-auto\">\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          placeholder=\"Search Your Recipe...\"\n          value={search}\n          onChange={onInputChange}\n        />\n        <div class=\"input-group-append\">\n          <button className=\"btn btn-dark\" onClick={onSearchClick}>\n            Search Recipe\n          </button>\n        </div>\n      </div>\n      <div className=\"greet\">\n        <h3>Made with<i className=\"material-icons heart\">favorite</i></h3>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst RecipeItem = props => {\n  const { name, image, ingredientLines } = props;\n  return (\n      <div class=\"card py-2 text-center\">\n        <img src={image} className=\"img-fluid w-50 mx-auto rounded-circle\" />\n        <div class=\"card-body\">\n          <h5>{name}</h5>\n        </div>\n        <ul class=\"list-group list-group-flush\">\n          {ingredientLines.map(ingredient => (\n            <li className=\"list-group-item\">{ingredient}</li>\n          ))}\n        </ul>\n      </div>\n  );\n};\n\nexport default RecipeItem;","import React from \"react\";\nimport RecipeItem from \"./RecipeItem\";\n\nconst Recipe = props => {\n  const { recipes } = props;\n  return (\n    <div class=\"card-columns\">\n      {recipes.map(recipe => (\n        <RecipeItem\n          key={Math.random() * 100}\n          name={recipe.recipe.label}\n          image={recipe.recipe.image}\n          ingredientLines={recipe.recipe.ingredientLines}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Recipe;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Recipe from \"./components/Recipe\";\nimport Axios from \"axios\";\n\nfunction App() {\n  const [search, setSerach] = useState(\"Momos\");\n  const [recipes, setRecipes] = useState([]);\n\n  const APP_ID = \"fd63358d\";\n  const APP_KEY = \"be2fbcb6345d55ef6b447866986cb702\t\";\n\n  useEffect(() => {\n    getRecipes();\n  }, []);\n\n  const getRecipes = async () => {\n    const res = await Axios.get(\n      `https://api.edamam.com/search?q=${search}&app_id=${APP_ID}&app_key=${APP_KEY}`\n    );\n    setRecipes(res.data.hits);\n  };\n\n  const onInputChange = e => {\n    setSerach(e.target.value);\n  };\n\n  const onSearchClick = () => {\n    getRecipes();\n  };\n  return (\n    <div className=\"App\">\n      <Header\n        search={search}\n        onInputChange={onInputChange}\n        onSearchClick={onSearchClick}\n      />\n      <div className=\"container\">\n        <Recipe recipes={recipes} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}